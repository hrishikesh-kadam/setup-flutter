name: CI

on:
  push:
    branches: [ main, js-action ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # 12:00 PM IST / 6:30 AM GMT every Sunday and Wednesday.
    # GitHub will remove any cache entries that have not been accessed in over 7 days.
    - cron: '30 6 * * 0,3'

defaults:
  run:
    shell: bash

jobs:
  test-basic:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
#        runner: [ ubuntu-latest, windows-latest ]
        runner: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: ./
      - run: flutter --version
        shell: pwsh
      - run: flutter --version
        if: runner.os == 'Windows'
        shell: cmd
      - run: flutter --version
        if: runner.os == 'Windows'
        shell: powershell

# TODO: Add test-setup-flutter-with-setFlutterRootPath

  test-with-setPubCachePath:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
#        runner: [ ubuntu-latest ]
        runner: [ ubuntu-latest, macos-latest ]
        pubCachePath: [ '$HOME/.pub-cache-new' ]
        include:
          - runner: windows-latest
            pubCachePath: '$LOCALAPPDATA\NewPub\Cache'
          - runner: ubuntu-latest
            pubCachePath: '/home/runner/.pub-cache-new'
          - runner: windows-latest
            pubCachePath: 'C:\Users\runneradmin\AppData\Local\NewPub\Cache'
          - runner: macos-latest
            pubCachePath: '/Users/runner/.pub-cache-new'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: ./
        with:
          setPubCachePath: ${{ matrix.pubCachePath }}
      - run: |
          set -x
          flutter create myapp
          cd myapp
          flutter pub get
          ls $PUB_CACHE/hosted/pub.dartlang.org

  test-with-addPubCacheBinToPath:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
#        runner: [ ubuntu-latest, windows-latest ]
        runner: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: ./
        with:
          setFlutterRootPath: 'true'
          addPubCacheBinToPath: 'true'
      - run: dart pub global activate devtools
      - if: runner.os != 'Windows'
        run: devtools --help
      - if: runner.os == 'Windows'
        shell: pwsh
        run: devtools --help
      - run: |
          DEFAULT_PUB_CACHE=$(./src/get-pub-cache-path.sh)
          echo "::debug::DEFAULT_PUB_CACHE=$DEFAULT_PUB_CACHE"
          ls $DEFAULT_PUB_CACHE/global_packages

  test-with-all:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
#        runner: [ ubuntu-latest ]
        runner: [ ubuntu-latest, macos-latest ]
        pubCachePath: [ '$HOME/.pub-cache-new' ]
        include:
          - runner: windows-latest
            pubCachePath: '$LOCALAPPDATA\NewPub\Cache'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Flutter
        uses: ./
        with:
          setFlutterRootPath: 'true'
          setPubCachePath: ${{ matrix.pubCachePath }}
          addPubCacheBinToPath: 'true'
      - run: dart pub global activate devtools
      - if: runner.os != 'Windows'
        run: devtools --help
      - if: runner.os == 'Windows'
        shell: pwsh
        run: devtools --help
      - run: ls $PUB_CACHE/global_packages
